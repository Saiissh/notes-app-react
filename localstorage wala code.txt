localstorage wala code


import logo from './logo.svg';
import NoteList from './components/NoteList';
import './App.css';
import { useEffect, useState } from 'react';
import Addnote from './components/Addnote';
import { nanoid } from 'nanoid'
 

function App() {

  const[noteData,setnoteData] =useState([{
    id:nanoid(),
    text:'first Note',
    date:'11/02/23'}
    ,
      {
      id:nanoid(),
      text:'second Note',
      date:'21/03/23'},
      {
        id:nanoid(),
        text:'third Note',
        date:'05/07/23'
      }
      

  ]);

  const [search,setSearch] = useState("");

  const [darkMode,setDarkMode] = useState(false);

  // add notes to local storage
  

  // retreiving notes from local storage

  useEffect(()=>{
    if(localStorage.getItem('react-notes-data')){
      let data= JSON.parse(localStorage.getItem('react-notes-data'));

      if(data && data.length>0)
      setnoteData(data);
    }
    else{
      setnoteData([]);
    }

  },[]);

  function updatestate(text){

    let date = new Date();

    let newobj={
      id:nanoid(),
      text:text,
      date:date.toLocaleDateString()
    };

    let newnote=[...noteData,newobj]
   
    setnoteData(newnote);

    localStorage.setItem('react-notes-data', JSON.stringify(newnote));
    console.log(noteData);
  }
  
  function deletenote(id){
    
   let newnote= noteData.filter((val)=>{
      if(val.id!=id)
      return val
    })

    setnoteData(newnote);
  }

  function searchhandler(event){

   setSearch(event.target.value);
    
  }

  function chngemode(){
    
    console.log(darkMode);
    if(darkMode)
    {
      document.documentElement.setAttribute('data-theme', 'dark');
      console.log('dark');
    }
    else
    {
      document.documentElement.setAttribute('data-theme', 'light');
      console.log('light');

    }

    setDarkMode((prev)=>!prev)
  }

  return (
  <div className='project'>

    <div className='toppro' >
      <h1 >Notes</h1>
      <button onClick={chngemode}>Toggle</button>
    </div>

    <div className='searchdiv' >
      <input className='search' placeholder='Search Here'  onChange={searchhandler} type="text" />
    </div>
     <div className='container'>
    
    <NoteList noteData={
      noteData.filter((val)=>{
        if(val.text.includes(search))
        return val
      })
      } 
updatestate={updatestate} deletenote={deletenote}/>
    
   </div>
  </div>
  );
}

export default App;
